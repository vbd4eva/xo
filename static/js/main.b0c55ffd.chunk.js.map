{"version":3,"sources":["components/Modal/Modal.jsx","components/GreetingForm/GreetingForm.jsx","components/PlayBox/PlayBox.jsx","components/Arena/Arena.jsx","components/InformPanel/InformPanel.jsx","components/Game/Game.jsx","App.js","index.js"],"names":["modalRoot","document","querySelector","Modal","children","createPortal","className","GreetingForm","onHandleForm","useState","namePlayerX","setNamePlayerX","namePlayerO","inputTextFunctions","handleChange","e","target","name","value","disabled","trim","autoComplete","onSubmit","preventDefault","X","O","type","onChange","required","PlayBox","getMark","mark","markClass","onClick","winCombinations","aveilableWinCombinations","left","isGameDraw","this","length","reset","update","player","number","getOponent","oponent","newLeft","forEach","comb","includes","push","filter","movesStatistic","move","Arena","handlePlayerWin","playerMark","changePlayer","winnerCombination","freezeArena","isFirstRender","useRef","Array","fill","arenaMarks","setArenaMarks","countArenaMarks","arenaMarksNum","setArenaMarksNum","useEffect","current","playerMoves","winComb","sortMoves","split","sort","join","find","reg","RegExp","replace","checkWinnerCombination","alert","onRoundEnd","checkGameEnd","console","log","map","boxIndex","makeMove","InformPanel","scorePlayerX","scorePlayerO","nextGame","players","score","Object","keys","key","Game","showModal","setShowModal","setPlayerMark","setScorePlayerX","setNamePlayerO","setScorePlayerO","winCombination","setWinCombination","setFreezeArena","playerNamesObj","prevState","playerName","prev","currentMark","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b0c55ffd.chunk.js","sourcesContent":["// import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n// import \"./Modal.scss\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default function Modal({ children }) {\r\n  return createPortal(\r\n    <div className=\"Modal__backdrop\">\r\n      {/* <div className=\"Modal__backdrop\" onClick={this.handleBackdropClick}> */}\r\n      <div className=\"Modal__content\">{children}</div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport default function GreetingForm({ onHandleForm }) {\r\n  const [namePlayerX, setNamePlayerX] = useState(\"\");\r\n  const [namePlayerO, setNamePlayerO] = useState(\"\");\r\n\r\n  const inputTextFunctions = {\r\n    namePlayerX: setNamePlayerX,\r\n    namePlayerO: setNamePlayerO,\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    inputTextFunctions[name](value);\r\n  };\r\n\r\n  function submitForm(e) {\r\n    e.preventDefault();\r\n    onHandleForm({\r\n      X: namePlayerX,\r\n      O: namePlayerO,\r\n    });\r\n  }\r\n\r\n  const disabled = !(namePlayerX.trim() && namePlayerO.trim());\r\n\r\n  return (\r\n    <form className=\"greeting-form\" autoComplete=\"off\" onSubmit={submitForm}>\r\n      <label className=\"greeting-form__label\">\r\n        <span>Введите имя первого игрока</span>\r\n        <input\r\n          type=\"text\"\r\n          name=\"namePlayerX\"\r\n          onChange={handleChange}\r\n          value={namePlayerX}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label className=\"greeting-form__label\">\r\n        <span>Введите имя второго игрока</span>\r\n        <input\r\n          type=\"text\"\r\n          name=\"namePlayerO\"\r\n          onChange={handleChange}\r\n          value={namePlayerO}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        className=\"greeting-form__submit-btn\"\r\n        disabled={disabled}\r\n      >\r\n        Начать игру\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Greeting form</h1>\r\n//       <button type=\"button\" onClick={onHandleForm}>\r\n//         Начать игру\r\n//       </button>\r\n//     </div>\r\n//   );\r\n\r\n// import useLocalStorage from '../../hooks/useLocalStorage';\r\n// import styles from './SignupForm.module.css';\r\n\r\n// export default function SignupForm() {\r\n//   const [email, setEmail] = useLocalStorage('email', '');\r\n//   const [password, setPassword] = useLocalStorage('password', '');\r\n\r\n//   const handleChange = event => {\r\n//     const { name, value } = event.target;\r\n\r\n//     switch (name) {\r\n//       case 'email':\r\n//         setEmail(value);\r\n//         break;\r\n\r\n//       case 'password':\r\n//         setPassword(value);\r\n//         break;\r\n\r\n//       default:\r\n//         return;\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form className={styles.form} autoComplete=\"off\">\r\n//       <label className={styles.label}>\r\n//         <span>Почта</span>\r\n//         <input\r\n//           type=\"email\"\r\n//           name=\"email\"\r\n//           onChange={handleChange}\r\n//           value={email}\r\n//         />\r\n//       </label>\r\n\r\n//       <label className={styles.label}>\r\n//         <span>Пароль</span>\r\n//         <input\r\n//           type=\"password\"\r\n//           name=\"password\"\r\n//           onChange={handleChange}\r\n//           value={password}\r\n//         />\r\n//       </label>\r\n\r\n//       <button type=\"submit\">Зарегистрироваться</button>\r\n//     </form>\r\n//   );\r\n// }\r\n","import React from \"react\";\r\n\r\nexport default function PlayBox({ getMark, mark }) {\r\n  const markClass = mark ? ` ${mark}` : \"\";\r\n  return (\r\n    <div className=\"game__play-box\" onClick={getMark}>\r\n      <div className={`game__play-mark${markClass}`}></div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport PlayBox from \"../PlayBox\";\r\n\r\nconst winCombinations = [\r\n  \"012\",\r\n  \"345\",\r\n  \"678\",\r\n  \"036\",\r\n  \"147\",\r\n  \"258\",\r\n  \"048\",\r\n  \"246\",\r\n];\r\nconst aveilableWinCombinations = {\r\n  left: [...winCombinations],\r\n  X: [],\r\n  O: [],\r\n\r\n  isGameDraw() {\r\n    const { X, O, left } = this;\r\n    const isGameDraw = !(X.length + O.length + left.length);\r\n    isGameDraw && this.reset();\r\n    return isGameDraw;\r\n  },\r\n\r\n  update(player, number) {\r\n    const { getOponent, left } = this;\r\n    const oponent = getOponent(player);\r\n\r\n    if (left.length > 0) {\r\n      const newLeft = [];\r\n      //   const newPlayers = [\"newPlayers\"];\r\n      left.forEach((comb) => {\r\n        (comb.includes(number) ? this[player] : newLeft).push(comb);\r\n      });\r\n\r\n      this.left = [...newLeft];\r\n    }\r\n\r\n    if (this[oponent].length > 0) {\r\n      this[oponent] = this[oponent].filter((comb) => !comb.includes(number));\r\n    }\r\n  },\r\n  getOponent(player) {\r\n    return player === \"X\" ? \"O\" : \"X\";\r\n  },\r\n  reset() {\r\n    this.left = [...winCombinations];\r\n    this.X = [];\r\n    this.O = [];\r\n  },\r\n};\r\n\r\nconst movesStatistic = {\r\n  X: \"\",\r\n  O: \"\",\r\n  update(player, move) {\r\n    this[player] += move;\r\n  },\r\n  reset() {\r\n    this.X = \"\";\r\n    this.O = \"\";\r\n  },\r\n};\r\n\r\nexport default function Arena({\r\n  handlePlayerWin,\r\n  playerMark,\r\n  changePlayer,\r\n  winnerCombination,\r\n  freezeArena,\r\n}) {\r\n  const isFirstRender = useRef(true);\r\n  // const freezeArena = useRef(false);\r\n\r\n  // const arenaMarks = useRef(Array(9).fill(null));\r\n  const [arenaMarks, setArenaMarks] = useState(Array(9).fill(null));\r\n  const [arenaMarksNum, setArenaMarksNum] = useState(() => countArenaMarks());\r\n\r\n  useEffect(() => {\r\n    if (isFirstRender.current) {\r\n      isFirstRender.current = !isFirstRender.current;\r\n      return;\r\n    }\r\n\r\n    // console.log(\"Player Mark Box! (arenaMarksNum) \" + arenaMarksNum);\r\n    if (arenaMarksNum >= 5) {\r\n      checkGameEnd();\r\n    }\r\n    changePlayer();\r\n  }, [arenaMarksNum]);\r\n\r\n  useEffect(() => {\r\n    if (!freezeArena && countArenaMarks()) onRoundEnd();\r\n  }, [freezeArena]);\r\n\r\n  const makeMove = (boxIndex) => {\r\n    if (freezeArena) return;\r\n\r\n    if (arenaMarks[boxIndex]) {\r\n      alert(\"Ячейка занята!\");\r\n      return;\r\n    }\r\n    arenaMarks[boxIndex] = playerMark;\r\n    setArenaMarksNum(countArenaMarks());\r\n\r\n    movesStatistic.update(playerMark, boxIndex);\r\n    aveilableWinCombinations.update(playerMark, boxIndex);\r\n  };\r\n\r\n  function checkGameEnd() {\r\n    const winnerCombination = checkWinnerCombination();\r\n    if (winnerCombination) {\r\n      handlePlayerWin(playerMark, winnerCombination);\r\n      return;\r\n    }\r\n\r\n    aveilableWinCombinations.isGameDraw() && onGameDraw();\r\n  }\r\n\r\n  function countArenaMarks() {\r\n    return arenaMarks.join(\"\").length;\r\n  }\r\n\r\n  function checkWinnerCombination() {\r\n    const playerMoves = movesStatistic[playerMark];\r\n    const winComb = [...aveilableWinCombinations[playerMark]];\r\n\r\n    const sortMoves = playerMoves.split(\"\").sort().join(\"\");\r\n    // console.log(\"playerMoves\", sortMoves);\r\n    // console.log(\"combinations\", winComb);\r\n    return winComb.find((comb) => {\r\n      const reg = new RegExp(`[^${comb}]`, \"g\");\r\n      const match = sortMoves.replace(reg, \"\");\r\n      if (comb === match) return comb;\r\n    });\r\n  }\r\n\r\n  // function onWin(winner) {\r\n  //   alert(\"Победа игрока #\" + playerMark);\r\n  //   console.log(\"winner\", winner);\r\n  //   handlePlayerWin(winner);\r\n  //   onRoundEnd();\r\n  // }\r\n  function onGameDraw() {\r\n    alert(\"Нет выиграшных ходов :(? - Ничья!\");\r\n    onRoundEnd();\r\n  }\r\n\r\n  function onRoundEnd() {\r\n    console.log(\"End of the round\");\r\n    resetArena();\r\n    movesStatistic.reset();\r\n    console.log(movesStatistic);\r\n    aveilableWinCombinations.reset();\r\n\r\n    console.log(aveilableWinCombinations);\r\n  }\r\n\r\n  function resetArena() {\r\n    setArenaMarks(Array(9).fill(null));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <div className=\"game__play-stage\">\r\n        {arenaMarks.map((mark, boxIndex) => (\r\n          <PlayBox\r\n            key={boxIndex}\r\n            getMark={() => makeMove(boxIndex)}\r\n            mark={mark}\r\n          />\r\n        ))}\r\n      </div>\r\n      <hr />\r\n      {winnerCombination && <h1>{winnerCombination}</h1>}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function InformPanel({\r\n  namePlayerX,\r\n  scorePlayerX,\r\n  namePlayerO,\r\n  scorePlayerO,\r\n  freezeArena,\r\n  nextGame,\r\n}) {\r\n  const players = {\r\n    X: { name: namePlayerX, score: scorePlayerX },\r\n    O: { name: namePlayerO, score: scorePlayerO },\r\n  };\r\n\r\n  return (\r\n    <div className=\"game__score\">\r\n      {freezeArena && (\r\n        <button type=\"button\" onClick={nextGame}>\r\n          Продолжить игру\r\n        </button>\r\n      )}\r\n      <p>Score</p>\r\n      {Object.keys(players).map((key) => {\r\n        const { name, score } = players[key];\r\n        return (\r\n          <p key={key}>\r\n            <i>{key}</i> <b>{name}: </b> <span>{score}</span>\r\n          </p>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useRef } from \"react\";\r\n\r\nimport Modal from \"../Modal\";\r\nimport GreetingForm from \"../GreetingForm\";\r\nimport Arena from \"../Arena\";\r\nimport InformPanel from \"../InformPanel\";\r\n\r\nexport default function Game() {\r\n  const [showModal, setShowModal] = useState(true);\r\n  const [playerMark, setPlayerMark] = useState(\"X\");\r\n\r\n  const [namePlayerX, setNamePlayerX] = useState(null);\r\n  const [scorePlayerX, setScorePlayerX] = useState(0);\r\n\r\n  const [namePlayerO, setNamePlayerO] = useState(null);\r\n  const [scorePlayerO, setScorePlayerO] = useState(0);\r\n\r\n  const [winCombination, setWinCombination] = useState(null);\r\n  const [freezeArena, setFreezeArena] = useState(false);\r\n\r\n  const players = {\r\n    X: { name: namePlayerX, score: scorePlayerX },\r\n    O: { name: namePlayerO, score: scorePlayerO },\r\n  };\r\n\r\n  const handleGreetingForm = (playerNamesObj) => {\r\n    closeModal();\r\n\r\n    const playerName = {\r\n      X: setNamePlayerX,\r\n      O: setNamePlayerO,\r\n    };\r\n    Object.keys(playerNamesObj).forEach((key) => {\r\n      playerName[key](playerNamesObj[key]);\r\n    });\r\n  };\r\n\r\n  const changePlayer = () => {\r\n    setPlayerMark((currentMark) => (currentMark === \"X\" ? \"O\" : \"X\"));\r\n  };\r\n\r\n  const handlePlayerWin = (playerMark, winnerCombination) => {\r\n    setFreezeArena(true);\r\n    setWinCombination(winnerCombination);\r\n    const countWin = {\r\n      X: setScorePlayerX,\r\n      O: setScorePlayerO,\r\n    };\r\n    countWin[playerMark]((prev) => prev + 1);\r\n    alert(`Победа игрока ${players[playerMark].name}`);\r\n  };\r\n\r\n  const nextGame = () => {\r\n    setWinCombination(null);\r\n    setFreezeArena(false);\r\n  };\r\n\r\n  function closeModal() {\r\n    setShowModal((prevState) => !prevState);\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      {showModal ? (\r\n        <Modal>\r\n          <GreetingForm onHandleForm={handleGreetingForm} />\r\n        </Modal>\r\n      ) : (\r\n        <>\r\n          <Arena\r\n            handlePlayerWin={handlePlayerWin}\r\n            playerMark={playerMark}\r\n            changePlayer={changePlayer}\r\n            winnerCombination={winCombination}\r\n            freezeArena={freezeArena}\r\n          />\r\n          <InformPanel\r\n            namePlayerX={namePlayerX}\r\n            scorePlayerX={scorePlayerX}\r\n            namePlayerO={namePlayerO}\r\n            scorePlayerO={scorePlayerO}\r\n            freezeArena={freezeArena}\r\n            nextGame={nextGame}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Game from \"./components/Game/\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"container\">\n        <Game />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}